{
    "contents" : "Shenandoah National Park brook trout data\n72 sites in 1996-2010: not all sites were sampled every year & there is a mix of 1-pass and 3-pass surveys\n========================================================================\n\n## working directory & libraries\n```{r working directory & libraries, warning=FALSE, message=FALSE}\nsetwd('G:/Conte/Broad spatial modelling/VA/analysis/Dail Madsen 6/ver 6.8/')\ngetwd()\nlibrary(reshape2)\nlibrary(rjags)\nlibrary(plyr)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(arm)\nlibrary(boot)\nload.module(\"glm\")\n```\n\n## Read in data\n```{r read in data, results='hide'}\nload(\"Shen Dail Madsen data and results ver 6.8.RData\") \n```\n\n## Setting up for the model\n```{r setting up, warning=FALSE}\n# Data structure\nnSites = 72; nYears = 15; nAges = 2; nPasses = 3\n\n# Bundle data\nDat <- list(nSites=nSites, nYears=nYears, nAges=nAges, \n            y=y, elev=elev, Jdate=Jdate, width=width, \n            fall.flow=fall.flow, winter.flow=winter.flow, spring.flow=spring.flow,\n            spring.temp=spring.temp)\n\n# INITIAL VALUES\n## Provide first year abundance for S matrix\nSNew <- array(NA, dim=c(nSites,nYears-1,nAges))\nSNew[,1,] <- 100\n\n## Set intial values\nInit <- function() list(S=SNew, alpha=2, beta=0.001,lambda=rep(200,nAges),\n                        gamma.b=rep(0,5), omega.mean=rep(0.5, nAges),\n                        omega.b=array(0, c(5,nAges)),\n                        p.mean=rep(0.5,nAges), p.b=rep(0,2))           \n```\n\n## Runnning the model\n```{r running the model, cache=TRUE}\n# Sequential\nStageBurnin <- jags.model(paste(\"Shen Dail Madsen model ver 6.8.r\",sep=\"\"), \n                          Dat, Init, n.chains=3, n.adapt=10000)     \n\n# coda.samples\n## Parameters to be monitored\nParsStage <- c(\"omega.mean\",\"omega.b\",\"gamma.b\",\"lambda\",\n               \"Ntotal\",\"p.mean\",\"p.b\",\"alpha\",\"beta\")\n## run\nNiter=20000\nout1 <- coda.samples(StageBurnin, ParsStage, n.iter=Niter, thin=100)\nsummary(out1)\nplot(out1)\n\n# jags.samples\n## Parameters to be monitored\nParsStage <- c(\"omega.mean\",\"omega.b\",\"gamma.b\",\"lambda\",\n               \"Ntotal\",\"p.mean\",\"p.b\",\"alpha\",\"beta\",\"N\",\"p\")\n## run\nout2 <- jags.samples(StageBurnin, ParsStage, n.iter=Niter, thin=100)\nstr(out2)\n```\n\n## Rhat and DIC\n```{r dic}\n## gelman\ngelman.diag(out1)\n\n## DIC\nchains=as.matrix(StageBurnin)\ndev=chains[,\"deviance\"]\ndic=mean(dev)+0.5*var(dev)\n\ndic.samples(StageBurnin, n.iter=1000, thin=1, type=\"pD\")\n```\n\n## lambda & sensitivity\n```{r lambda & sensitivity}\nlibrary(popbio)\n# when adult abundance is lower (N = 50 per 100m)\nN=50\nA1 <- matrix(c(0, exp(1.002-0.0075*N), 0.319, 0.453), nrow=2, byrow=TRUE)\nlambda(A1)\nA1\nsensitivity(A1, zero=TRUE)\nelasticity(A1)\n\n# when adult abundance is higher (N = 100 per 100m)\nN=100\nA2 <- matrix(c(0, exp(1.002-0.0075*N), 0.319, 0.453), nrow=2, byrow=TRUE)\nlambda(A2)\nA2\nsensitivity(A2, zero=TRUE)\nelasticity(A2)\n```\n\n\n                         #################################\n                         ## Graphs below: please ignore ##\n                         #################################\n## Checking biplot\n```{r biplot of mcmc parameters}\nbiplot <- as.data.frame(cbind(c(out2$omega.mean[1,,1], out2$omega.mean[1,,2], out2$omega.mean[1,,3]),\n                              c(out2$omega.mean[2,,1], out2$omega.mean[2,,2], out2$omega.mean[2,,3]),\n                              c(out2$omega.b[1,1,,1], out2$omega.b[1,1,,2], out2$omega.b[1,1,,3]),\n                              c(out2$omega.b[2,1,,1], out2$omega.b[2,1,,2], out2$omega.b[2,1,,3]),\n                              c(out2$omega.b[3,1,,1], out2$omega.b[3,1,,2], out2$omega.b[3,1,,3]),\n                              c(out2$omega.b[4,1,,1], out2$omega.b[4,1,,2], out2$omega.b[4,1,,3]),\n                              c(out2$omega.b[5,1,,1], out2$omega.b[5,1,,2], out2$omega.b[5,1,,3]),\n                              c(out2$omega.b[1,2,,1], out2$omega.b[1,2,,2], out2$omega.b[1,2,,3]),\n                              c(out2$omega.b[2,2,,1], out2$omega.b[2,2,,2], out2$omega.b[2,2,,3]),\n                              c(out2$omega.b[3,2,,1], out2$omega.b[3,2,,2], out2$omega.b[3,2,,3]),\n                              c(out2$omega.b[4,2,,1], out2$omega.b[4,2,,2], out2$omega.b[4,2,,3]),\n                              c(out2$omega.b[5,2,,1], out2$omega.b[5,2,,2], out2$omega.b[5,2,,3]),\n                              c(out2$alpha[,,1], out2$alpha[,,2], out2$alpha[,,3]),\n                              c(out2$beta[,,1], out2$beta[,,2], out2$beta[,,3]),\n                              c(out2$gamma.b[1,,1], out2$gamma.b[1,,2], out2$gamma.b[1,,3]),\n                              c(out2$gamma.b[2,,1], out2$gamma.b[2,,2], out2$gamma.b[2,,3]),\n                              c(out2$gamma.b[3,,1], out2$gamma.b[3,,2], out2$gamma.b[3,,3]),\n                              c(out2$gamma.b[4,,1], out2$gamma.b[4,,2], out2$gamma.b[4,,3]),\n                              c(out2$gamma.b[5,,1], out2$gamma.b[5,,2], out2$gamma.b[5,,3]),\n                              c(out2$p.mean[1,,1], out2$p.mean[1,,2], out2$p.mean[1,,3]),\n                              c(out2$p.mean[2,,1], out2$p.mean[2,,2], out2$p.mean[2,,3]),\n                              c(out2$p.b[1,,1], out2$p.b[1,,2], out2$p.b[1,,3]), \n                              c(out2$p.b[2,,1], out2$p.b[2,,2], out2$p.b[2,,3])))\n\nnames(biplot) <- c(\"omega.mean1\",\"omega.mean2\",\n                   \"omega.b1.1\",\"omega.b2.1\",\"omega.b3.1\",\"omega.b4.1\",\"omega.b5.1\",\n                   \"omega.b1.2\",\"omega.b2.2\",\"omega.b3.2\",\"omega.b4.2\",\"omega.b5.2\",\n                   \"alpha\",\"beta\",\"gamma.b1\",\"gamma.b2\",\"gamma.b3\",\"gamma.b4\",\"gamma.b5\",\n                   \"p.mean1\",\"p.mean2\",\"p.b1\",\"p.b2\")\n\n## Pair plot\n# function for pearson correlation (http://www2.warwick.ac.uk/fac/sci/moac/people/students/peter_cock/r/iris_plots/)\npanel.pearson <- function(x, y, ...) {\n  horizontal <- (par(\"usr\")[1] + par(\"usr\")[2]) / 2; \n  vertical <- (par(\"usr\")[3] + par(\"usr\")[4]) / 2; \n  text(horizontal, vertical, format(cor(x,y), digits=2)) \n}\n\npairs(biplot, main=\"Pairs plot of mcmc estimates at each iteration\", upper.panel=panel.pearson)\n\n## Look at omega terms only\nbiplot2 <- as.data.frame(cbind(c(out2$omega.mean[1,,1], out2$omega.mean[1,,2], out2$omega.mean[1,,3]),\n                               c(out2$omega.mean[2,,1], out2$omega.mean[2,,2], out2$omega.mean[2,,3]),\n                               c(out2$omega.b[1,1,,1], out2$omega.b[1,1,,2], out2$omega.b[1,1,,3]),\n                               c(out2$omega.b[2,1,,1], out2$omega.b[2,1,,2], out2$omega.b[2,1,,3]),\n                               c(out2$omega.b[3,1,,1], out2$omega.b[3,1,,2], out2$omega.b[3,1,,3]),\n                               c(out2$omega.b[4,1,,1], out2$omega.b[4,1,,2], out2$omega.b[4,1,,3]),\n                               c(out2$omega.b[5,1,,1], out2$omega.b[5,1,,2], out2$omega.b[5,1,,3]),\n                               c(out2$omega.b[1,2,,1], out2$omega.b[1,2,,2], out2$omega.b[1,2,,3]),\n                               c(out2$omega.b[2,2,,1], out2$omega.b[2,2,,2], out2$omega.b[2,2,,3]),\n                               c(out2$omega.b[3,2,,1], out2$omega.b[3,2,,2], out2$omega.b[3,2,,3]),\n                               c(out2$omega.b[4,2,,1], out2$omega.b[4,2,,2], out2$omega.b[4,2,,3]),\n                               c(out2$omega.b[5,2,,1], out2$omega.b[5,2,,2], out2$omega.b[5,2,,3])))\n\nnames(biplot2) <- c(\"omega.mean1\",\"omega.mean2\",\n                    \"omega.b1.1\",\"omega.b2.1\",\"omega.b3.1\",\"omega.b4.1\",\"omega.b5.1\",\n                    \"omega.b1.2\",\"omega.b2.2\",\"omega.b3.2\",\"omega.b4.2\",\"omega.b5.2\")\npairs(biplot2, main=\"Pairs plot of mcmc estimates at each iteration\", upper.panel=panel.pearson)\n```\n\n# check model fit\n```{r check model fit, warning=FALSE}\nN.est <- p.est <- array(NA, dim=c(nSites,nYears,nAges))\nfor(i in 1:nSites){\n  for(t in 1:nYears){\n    for(a in 1:nAges){\n      N.est[i,t,a] <- median(out2$N[i,t,a,1:200,1:3])\n      p.est[i,t,a] <- median(out2$p[i,t,a,1:200,1:3])\n    }\n  }\n}\n\ny.est <- array(NA, dim=c(nSites,nYears,nAges,nPasses))\ny.est[,,,1] <- N.est*p.est\ny.est[,,,2] <- N.est*(1-p.est)*p.est\ny.est[,,,3] <- N.est*(1-p.est)*(1-p.est)*p.est\n\n## YOY, 1st pass\nyoy1.obs <- adply(y[,,1,1], c(1,2), mean)\nyoy1.est <- adply(y.est[,,1,1], c(1,2), mean)\n\nyoy1.fit <- cbind(yoy1.obs, yoy1.est$V1)\nnames(yoy1.fit) <- c(\"siteID\", \"yearID\", \"yoy1.obs\", \"yoy1.est\")\n\nggplot(yoy1.fit, aes(x=yoy1.obs, y=yoy1.est)) + geom_point() +\n  geom_abline(intercept = 0, slope = 1, colour = \"red\", size = 1.1, linetype=\"dashed\") +\n  facet_wrap( ~ yearID, scales=\"free\", ncol=5) +\n  xlab(\"Observed YOY count in 1st pass\") +\n  ylab(\"Predicted YOY count in 1st pass\") +\n  labs(title = \"Model fit: YOY 1st pass\") +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        legend.background = element_rect(colour = \"black\"),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())\n\n## YOY, 2nd pass\nyoy2.obs <- adply(y[,,1,2], c(1,2), mean)\nyoy2.est <- adply(y.est[,,1,2], c(1,2), mean)\n\nyoy2.fit <- cbind(yoy2.obs, yoy2.est$V1)\nnames(yoy2.fit) <- c(\"siteID\", \"yearID\", \"yoy2.obs\", \"yoy2.est\")\n\nggplot(yoy2.fit, aes(x=yoy2.obs, y=yoy2.est)) + geom_point() +\n  geom_abline(intercept = 0, slope = 1, colour = \"red\", size = 1.1, linetype=\"dashed\") +\n  facet_wrap( ~ yearID, scales=\"free\", ncol=5) +\n  xlab(\"Observed YOY count in 2nd pass\") +\n  ylab(\"Predicted YOY count in 2nd pass\") +\n  labs(title = \"Model fit: YOY 2nd pass\") +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        legend.background = element_rect(colour = \"black\"),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())\n\n## YOY, 3rd pass\nyoy3.obs <- adply(y[,,1,3], c(1,2), mean)\nyoy3.est <- adply(y.est[,,1,3], c(1,2), mean)\n\nyoy3.fit <- cbind(yoy3.obs, yoy3.est$V1)\nnames(yoy3.fit) <- c(\"siteID\", \"yearID\", \"yoy3.obs\", \"yoy3.est\")\n\nggplot(yoy3.fit, aes(x=yoy3.obs, y=yoy3.est)) + geom_point() +\n  geom_abline(intercept = 0, slope = 1, colour = \"red\", size = 1.1, linetype=\"dashed\") +\n  facet_wrap( ~ yearID, scales=\"free\", ncol=5) +\n  xlab(\"Observed YOY count in 3rd pass\") +\n  ylab(\"Predicted YOY count in 3rd pass\") +\n  labs(title = \"Model fit: YOY 3rd pass\") +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        legend.background = element_rect(colour = \"black\"),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())\n\n## Adult, 1st pass\nadult1.obs <- adply(y[,,2,1], c(1,2), mean)\nadult1.est <- adply(y.est[,,2,1], c(1,2), mean)\n\nadult1.fit <- cbind(adult1.obs, adult1.est$V1)\nnames(adult1.fit) <- c(\"siteID\", \"yearID\", \"adult1.obs\", \"adult1.est\")\n\nggplot(adult1.fit, aes(x=adult1.obs, y=adult1.est)) + geom_point() +\n  geom_abline(intercept = 0, slope = 1, colour = \"red\", size = 1.1, linetype=\"dashed\") +\n  facet_wrap( ~ yearID, scales=\"free\", ncol=5) +\n  xlab(\"Observed adult count in 1st pass\") +\n  ylab(\"Predicted adult count in 1st pass\") +\n  labs(title = \"Model fit: adult 1st pass\") +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        legend.background = element_rect(colour = \"black\"),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())  \n\n## Adult, 2nd pass\nadult2.obs <- adply(y[,,2,2], c(1,2), mean)\nadult2.est <- adply(y.est[,,2,2], c(1,2), mean)\n\nadult2.fit <- cbind(adult2.obs, adult2.est$V1)\nnames(adult2.fit) <- c(\"siteID\", \"yearID\", \"adult2.obs\", \"adult2.est\")\n\nggplot(adult2.fit, aes(x=adult2.obs, y=adult2.est)) + geom_point() +\n  geom_abline(intercept = 0, slope = 1, colour = \"red\", size = 1.1, linetype=\"dashed\") +\n  facet_wrap( ~ yearID, scales=\"free\", ncol=5) +\n  xlab(\"Observed adult count in 2nd pass\") +\n  ylab(\"Predicted adult count in 2nd pass\") +\n  labs(title = \"Model fit: adult 2nd pass\") +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        legend.background = element_rect(colour = \"black\"),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())  \n\n## Adult, 3rd pass\nadult3.obs <- adply(y[,,2,3], c(1,2), mean)\nadult3.est <- adply(y.est[,,2,3], c(1,2), mean)\n\nadult3.fit <- cbind(adult3.obs, adult3.est$V1)\nnames(adult3.fit) <- c(\"siteID\", \"yearID\", \"adult3.obs\", \"adult3.est\")\n\nggplot(adult3.fit, aes(x=adult3.obs, y=adult3.est)) + geom_point() +\n  geom_abline(intercept = 0, slope = 1, colour = \"red\", size = 1.1, linetype=\"dashed\") +\n  facet_wrap( ~ yearID, scales=\"free\", ncol=5) +\n  xlab(\"Observed adult count in 3rd pass\") +\n  ylab(\"Predicted adult count in 3rd pass\") +\n  labs(title = \"Model fit: adult 3rd pass\") +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        legend.background = element_rect(colour = \"black\"),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())\n\n```\n\n# Now onto ecology\n## total trout abundance over 15 years\n```{r total abundance}\nyearTotalAbundMean <- adply(out2$Ntotal, c(1,2), mean)\nyearTotalAbundCI <- adply(out2$Ntotal, c(1,2), quantile, probs=c(.025, .975))\nyear2 <- rep(1996:2010, 2)\nsize2 <- rep(c(\"YOY\",\"adult\"), each=15)\n\nyearTotalAbund <- cbind(yearTotalAbundMean, yearTotalAbundCI[,3:4], year2, size2)\nnames(yearTotalAbund) <- c(\"year\",\"size\",\"total.mean\",\"total.lower\",\"total.upper\",\"year2\",\"size2\")\nyearTotalAbund$year2 <- as.numeric(as.character(yearTotalAbund$year2))\n\nggplot(yearTotalAbund, aes(x=year2, y=total.mean, colour=size2)) +\n  geom_errorbar(aes(ymin=total.lower, ymax=total.upper), width=0.5, size=1.2) +\n  geom_line(size=1.2) +\n  geom_point(size=1.2) +\n  xlab(\"Year\") +\n  ylab(\"Estimated total abundance\") +\n  labs(title = \"Yearly total abundance (with 95 % CI) over 72 sites in Shenandoah\") +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1.2)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        legend.background = element_rect(colour = \"black\"),\n        legend.text = element_text(size = 15),\n        legend.title = element_blank())\n```\n\n## total trout abundance over 15 years for Ben's poster\n```{r total abundance}\nyearTotalAbundMean <- adply(out2$Ntotal, c(1,2), mean)\nyearTotalAbundCI <- adply(out2$Ntotal, c(1,2), quantile, probs=c(.025, .975))\nyear2 <- rep(1996:2010, 2)\nsize2 <- rep(c(\"YOY\",\"adult\"), each=15)\n\nyearTotalAbund <- cbind(yearTotalAbundMean, yearTotalAbundCI[,3:4], year2, size2)\nnames(yearTotalAbund) <- c(\"year\",\"size\",\"total.mean\",\"total.lower\",\"total.upper\",\"year2\",\"size2\")\nyearTotalAbund$year2 <- as.numeric(as.character(yearTotalAbund$year2))\n\nggTot <- ggplot(yearTotalAbund, aes(x=year2, y=total.mean, colour=size2)) +\n  geom_errorbar(aes(ymin=total.lower, ymax=total.upper), width=0.5, size=1.2) +\n  geom_line(size=1.2) +\n  geom_point(size=1.2) +\n  scale_colour_manual(values = c(\"#003300\",\"brown\")) +\n  xlab(\"Year\") +\n  ylab(\"Estimated total abundance\") +\n  #labs(title = \"Yearly total abundance (with 95 % CI) over 72 sites in Shenandoah\") +\n  theme_bw() +\n  theme(panel.border=element_rect(colour='black'),\n        panel.background=element_rect(fill='#FDF5B7', colour='black'),\n        panel.grid.major=element_line(colour=NA),\n        panel.grid.minor=element_line(colour=NA),\n        plot.background=element_rect(fill=\"#FDF5B7\"),\n        axis.title.y = element_text(size = rel(1.8), angle=90),\n        axis.title.x = element_text(size = rel(1.8)),\n        axis.text = element_text(size = rel(1.5)),\n        plot.title = element_text(size = rel(1.8), colour=\"black\", face=\"bold\"),\n        legend.position=\"none\")\n        #legend.background = element_rect(colour = \"black\"),\n        #legend.text = element_text(size = 15),\n        #legend.title = element_blank())\nggTot\n\ndpiIn <- 600\nggsave( file=paste(getwd(),'/ShenTotalBen.png',sep=''), plot=ggTot, dpi=dpiIn , width=8, height=5, units='in',scale=2 )\n```\n\n## adult vs. yoy time lag \n```{r time lag}\n## make df\nlag.df <- adply(out2$Ntotal, c(1,2), mean)\nnames(lag.df) <- c(\"year\",\"age\",\"totalN\")\nlag.df.wide <- dcast(lag.df, year ~ age, value.var=\"totalN\")\nnames(lag.df.wide) <- c(\"year\",\"yoyTotal\",\"adultTotal\")\n\n## adult at year t vs. yoy at year t+1\nlag.df.wide2 <- as.data.frame(cbind(lag.df.wide$adultTotal[1:(nYears-1)], \n                                    lag.df.wide$yoyTotal[2:nYears]))\n\nlibrary(splines);library(MASS)\nggplot(lag.df.wide2, aes(x=V1,y=V2)) + geom_point(size=4) + \n  stat_smooth(method=\"lm\", formula= y ~ ns(x,2), se=FALSE, size=1.2, linetype=\"dashed\") +\n  xlab(\"Total adult abundance at year t\") +\n  ylab(\"Total YOY abundance at year t+1\") +\n  labs(title = \"Based on analysis of 72 sites in 1996-2010 in Shenandoah\") +\n  theme_bw() +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1.2)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        panel.border=element_rect(colour='black'),\n        panel.background=element_rect(fill='white', colour='black'),\n        panel.grid.major=element_line(colour=NA),\n        panel.grid.minor=element_line(colour=NA))\n\n## yoy at year t vs. adult at year t+1\nlag.df.wide3 <- as.data.frame(cbind(lag.df.wide$yoyTotal[1:(nYears-1)], \n                                    lag.df.wide$adultTotal[2:nYears]))\n\nggplot(lag.df.wide3, aes(x=V1,y=V2)) + geom_point(size=4) + \n  stat_smooth(method=\"lm\", se=FALSE, size=1.2, linetype=\"dashed\") +\n  xlab(\"Total YOY abundance at year t\") +\n  ylab(\"Total adult abundance at year t+1\") +\n  labs(title = \"Based on analysis of 72 sites in 1996-2010 in Shenandoah\") +\n  theme_bw() +\n  theme(axis.title.y = element_text(size = rel(1.5), angle=90),\n        axis.title.x = element_text(size = rel(1.5)),\n        axis.text = element_text(size = rel(1.2)),\n        plot.title = element_text(size = rel(1.5), colour=\"blue\"),\n        panel.border=element_rect(colour='black'),\n        panel.background=element_rect(fill='white', colour='black'),\n        panel.grid.major=element_line(colour=NA),\n        panel.grid.minor=element_line(colour=NA))  \n```\n",
    "created" : 1389892602459.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "999798716",
    "id" : "C45E2D61",
    "lastKnownWriteTime" : 1389898880,
    "path" : "~/Documents/Research/Stream_Climate_Change/Kanno_Brook_Trout/Call Shen Dail Madsen model ver 6.8.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}