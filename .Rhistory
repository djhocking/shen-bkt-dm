load("~/Documents/Research/Stream_Climate_Change/Kanno_Brook_Trout/Shen Dail Madsen data and results ver 6.8.RData")
View(yoy1.obs)
View(adult1.obs)
gelman.diag(out1)
getwd()
library(reshape2)
library(rjags)
library(plyr)
library(ggplot2)
library(knitr)
library(arm)
library(boot)
install.packages("arm")
library(arm)
load.module("glm")
rm(arm)
rm(package::arm)
detach("package:arm", unload=TRUE)
library(reshape2)
library(rjags)
library(plyr)
library(ggplot2)
library(knitr)
library(boot)
load.module("glm")
y
levels(nAges)
str(nAges)
nAges
str(y)
gelman.diag(out1)
summary(out1)
biplot <- as.data.frame(cbind(c(out2$omega.mean[1,,1], out2$omega.mean[1,,2], out2$omega.mean[1,,3]),
c(out2$omega.mean[2,,1], out2$omega.mean[2,,2], out2$omega.mean[2,,3]),
c(out2$omega.b[1,1,,1], out2$omega.b[1,1,,2], out2$omega.b[1,1,,3]),
c(out2$omega.b[2,1,,1], out2$omega.b[2,1,,2], out2$omega.b[2,1,,3]),
c(out2$omega.b[3,1,,1], out2$omega.b[3,1,,2], out2$omega.b[3,1,,3]),
c(out2$omega.b[4,1,,1], out2$omega.b[4,1,,2], out2$omega.b[4,1,,3]),
c(out2$omega.b[5,1,,1], out2$omega.b[5,1,,2], out2$omega.b[5,1,,3]),
c(out2$omega.b[1,2,,1], out2$omega.b[1,2,,2], out2$omega.b[1,2,,3]),
c(out2$omega.b[2,2,,1], out2$omega.b[2,2,,2], out2$omega.b[2,2,,3]),
c(out2$omega.b[3,2,,1], out2$omega.b[3,2,,2], out2$omega.b[3,2,,3]),
c(out2$omega.b[4,2,,1], out2$omega.b[4,2,,2], out2$omega.b[4,2,,3]),
c(out2$omega.b[5,2,,1], out2$omega.b[5,2,,2], out2$omega.b[5,2,,3]),
c(out2$alpha[,,1], out2$alpha[,,2], out2$alpha[,,3]),
c(out2$beta[,,1], out2$beta[,,2], out2$beta[,,3]),
c(out2$gamma.b[1,,1], out2$gamma.b[1,,2], out2$gamma.b[1,,3]),
c(out2$gamma.b[2,,1], out2$gamma.b[2,,2], out2$gamma.b[2,,3]),
c(out2$gamma.b[3,,1], out2$gamma.b[3,,2], out2$gamma.b[3,,3]),
c(out2$gamma.b[4,,1], out2$gamma.b[4,,2], out2$gamma.b[4,,3]),
c(out2$gamma.b[5,,1], out2$gamma.b[5,,2], out2$gamma.b[5,,3]),
c(out2$p.mean[1,,1], out2$p.mean[1,,2], out2$p.mean[1,,3]),
c(out2$p.mean[2,,1], out2$p.mean[2,,2], out2$p.mean[2,,3]),
c(out2$p.b[1,,1], out2$p.b[1,,2], out2$p.b[1,,3]),
c(out2$p.b[2,,1], out2$p.b[2,,2], out2$p.b[2,,3])))
names(biplot) <- c("omega.mean1","omega.mean2",
"omega.b1.1","omega.b2.1","omega.b3.1","omega.b4.1","omega.b5.1",
"omega.b1.2","omega.b2.2","omega.b3.2","omega.b4.2","omega.b5.2",
"alpha","beta","gamma.b1","gamma.b2","gamma.b3","gamma.b4","gamma.b5",
"p.mean1","p.mean2","p.b1","p.b2")
## Pair plot
# function for pearson correlation (http://www2.warwick.ac.uk/fac/sci/moac/people/students/peter_cock/r/iris_plots/)
panel.pearson <- function(x, y, ...) {
horizontal <- (par("usr")[1] + par("usr")[2]) / 2;
vertical <- (par("usr")[3] + par("usr")[4]) / 2;
text(horizontal, vertical, format(cor(x,y), digits=2))
}
pairs(biplot, main="Pairs plot of mcmc estimates at each iteration", upper.panel=panel.pearson)
## Look at omega terms only
biplot2 <- as.data.frame(cbind(c(out2$omega.mean[1,,1], out2$omega.mean[1,,2], out2$omega.mean[1,,3]),
c(out2$omega.mean[2,,1], out2$omega.mean[2,,2], out2$omega.mean[2,,3]),
c(out2$omega.b[1,1,,1], out2$omega.b[1,1,,2], out2$omega.b[1,1,,3]),
c(out2$omega.b[2,1,,1], out2$omega.b[2,1,,2], out2$omega.b[2,1,,3]),
c(out2$omega.b[3,1,,1], out2$omega.b[3,1,,2], out2$omega.b[3,1,,3]),
c(out2$omega.b[4,1,,1], out2$omega.b[4,1,,2], out2$omega.b[4,1,,3]),
c(out2$omega.b[5,1,,1], out2$omega.b[5,1,,2], out2$omega.b[5,1,,3]),
c(out2$omega.b[1,2,,1], out2$omega.b[1,2,,2], out2$omega.b[1,2,,3]),
c(out2$omega.b[2,2,,1], out2$omega.b[2,2,,2], out2$omega.b[2,2,,3]),
c(out2$omega.b[3,2,,1], out2$omega.b[3,2,,2], out2$omega.b[3,2,,3]),
c(out2$omega.b[4,2,,1], out2$omega.b[4,2,,2], out2$omega.b[4,2,,3]),
c(out2$omega.b[5,2,,1], out2$omega.b[5,2,,2], out2$omega.b[5,2,,3])))
names(biplot2) <- c("omega.mean1","omega.mean2",
"omega.b1.1","omega.b2.1","omega.b3.1","omega.b4.1","omega.b5.1",
"omega.b1.2","omega.b2.2","omega.b3.2","omega.b4.2","omega.b5.2")
pairs(biplot2, main="Pairs plot of mcmc estimates at each iteration", upper.panel=panel.pearson)
```
# check model fit
ggplot(yoy1.fit, aes(x=yoy1.obs, y=yoy1.est)) + geom_point() +
geom_abline(intercept = 0, slope = 1, colour = "red", size = 1.1, linetype="dashed") +
facet_wrap( ~ yearID, scales="free", ncol=5) +
xlab("Observed YOY count in 1st pass") +
ylab("Predicted YOY count in 1st pass") +
labs(title = "Model fit: YOY 1st pass") +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1)),
plot.title = element_text(size = rel(1.5), colour="blue"),
legend.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_blank())
warnings()
ggplot(adult1.fit, aes(x=adult1.obs, y=adult1.est)) + geom_point() +
geom_abline(intercept = 0, slope = 1, colour = "red", size = 1.1, linetype="dashed") +
facet_wrap( ~ yearID, scales="free", ncol=5) +
xlab("Observed adult count in 1st pass") +
ylab("Predicted adult count in 1st pass") +
labs(title = "Model fit: adult 1st pass") +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1)),
plot.title = element_text(size = rel(1.5), colour="blue"),
legend.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_blank())
ggplot(adult3.fit, aes(x=adult3.obs, y=adult3.est)) + geom_point() +
geom_abline(intercept = 0, slope = 1, colour = "red", size = 1.1, linetype="dashed") +
facet_wrap( ~ yearID, scales="free", ncol=5) +
xlab("Observed adult count in 3rd pass") +
ylab("Predicted adult count in 3rd pass") +
labs(title = "Model fit: adult 3rd pass") +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1)),
plot.title = element_text(size = rel(1.5), colour="blue"),
legend.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_blank())
ggplot(adult1.fit, aes(x=adult1.obs, y=adult1.est)) + geom_point() +
geom_abline(intercept = 0, slope = 1, colour = "red", size = 1.1, linetype="dashed") +
facet_wrap( ~ yearID, scales="free", ncol=5) +
xlab("Observed adult count in 1st pass") +
ylab("Predicted adult count in 1st pass") +
labs(title = "Model fit: adult 1st pass") +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1)),
plot.title = element_text(size = rel(1.5), colour="blue"),
legend.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_blank())
## Adult, 2nd pass
adult2.obs <- adply(y[,,2,2], c(1,2), mean)
adult2.est <- adply(y.est[,,2,2], c(1,2), mean)
adult2.fit <- cbind(adult2.obs, adult2.est$V1)
names(adult2.fit) <- c("siteID", "yearID", "adult2.obs", "adult2.est")
ggplot(adult2.fit, aes(x=adult2.obs, y=adult2.est)) + geom_point() +
geom_abline(intercept = 0, slope = 1, colour = "red", size = 1.1, linetype="dashed") +
facet_wrap( ~ yearID, scales="free", ncol=5) +
xlab("Observed adult count in 2nd pass") +
ylab("Predicted adult count in 2nd pass") +
labs(title = "Model fit: adult 2nd pass") +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1)),
plot.title = element_text(size = rel(1.5), colour="blue"),
legend.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_blank())
## Adult, 3rd pass
adult3.obs <- adply(y[,,2,3], c(1,2), mean)
adult3.est <- adply(y.est[,,2,3], c(1,2), mean)
adult3.fit <- cbind(adult3.obs, adult3.est$V1)
names(adult3.fit) <- c("siteID", "yearID", "adult3.obs", "adult3.est")
ggplot(adult3.fit, aes(x=adult3.obs, y=adult3.est)) + geom_point() +
geom_abline(intercept = 0, slope = 1, colour = "red", size = 1.1, linetype="dashed") +
facet_wrap( ~ yearID, scales="free", ncol=5) +
xlab("Observed adult count in 3rd pass") +
ylab("Predicted adult count in 3rd pass") +
labs(title = "Model fit: adult 3rd pass") +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1)),
plot.title = element_text(size = rel(1.5), colour="blue"),
legend.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_blank())
ggplot(yearTotalAbund, aes(x=year2, y=total.mean, colour=size2)) +
geom_errorbar(aes(ymin=total.lower, ymax=total.upper), width=0.5, size=1.2) +
geom_line(size=1.2) +
geom_point(size=1.2) +
xlab("Year") +
ylab("Estimated total abundance") +
labs(title = "Yearly total abundance (with 95 % CI) over 72 sites in Shenandoah") +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
plot.title = element_text(size = rel(1.5), colour="blue"),
legend.background = element_rect(colour = "black"),
legend.text = element_text(size = 15),
legend.title = element_blank())
ggTot <- ggplot(yearTotalAbund, aes(x=year2, y=total.mean, colour=size2)) +
geom_errorbar(aes(ymin=total.lower, ymax=total.upper), width=0.5, size=1.2) +
geom_line(size=1.2) +
geom_point(size=1.2) +
scale_colour_manual(values = c("#003300","brown")) +
xlab("Year") +
ylab("Estimated total abundance") +
#labs(title = "Yearly total abundance (with 95 % CI) over 72 sites in Shenandoah") +
theme_bw() +
theme(panel.border=element_rect(colour='black'),
panel.background=element_rect(fill='#FDF5B7', colour='black'),
panel.grid.major=element_line(colour=NA),
panel.grid.minor=element_line(colour=NA),
plot.background=element_rect(fill="#FDF5B7"),
axis.title.y = element_text(size = rel(1.8), angle=90),
axis.title.x = element_text(size = rel(1.8)),
axis.text = element_text(size = rel(1.5)),
plot.title = element_text(size = rel(1.8), colour="black", face="bold"),
legend.position="none")
#legend.background = element_rect(colour = "black"),
#legend.text = element_text(size = 15),
#legend.title = element_blank())
ggTot
dpiIn <- 600
ggsave( file=paste(getwd(),'/ShenTotalBen.png',sep=''), plot=ggTot, dpi=dpiIn , width=8, height=5, units='in',scale=2 )
ggTot
library(splines);library(MASS)
ggplot(lag.df.wide2, aes(x=V1,y=V2)) + geom_point(size=4) +
stat_smooth(method="lm", formula= y ~ ns(x,2), se=FALSE, size=1.2, linetype="dashed") +
xlab("Total adult abundance at year t") +
ylab("Total YOY abundance at year t+1") +
labs(title = "Based on analysis of 72 sites in 1996-2010 in Shenandoah") +
theme_bw() +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
plot.title = element_text(size = rel(1.5), colour="blue"),
panel.border=element_rect(colour='black'),
panel.background=element_rect(fill='white', colour='black'),
panel.grid.major=element_line(colour=NA),
panel.grid.minor=element_line(colour=NA))
dev.off()
dev.off()
ggplot(lag.df.wide2, aes(x=V1,y=V2)) + geom_point(size=4) +
stat_smooth(method="lm", formula= y ~ ns(x,2), se=FALSE, size=1.2, linetype="dashed") +
xlab("Total adult abundance at year t") +
ylab("Total YOY abundance at year t+1") +
labs(title = "Based on analysis of 72 sites in 1996-2010 in Shenandoah") +
theme_bw() +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
plot.title = element_text(size = rel(1.5), colour="blue"),
panel.border=element_rect(colour='black'),
panel.background=element_rect(fill='white', colour='black'),
panel.grid.major=element_line(colour=NA),
panel.grid.minor=element_line(colour=NA))
## yoy at year t vs. adult at year t+1
ggplot(lag.df.wide3, aes(x=V1,y=V2)) + geom_point(size=4) +
stat_smooth(method="lm", se=FALSE, size=1.2, linetype="dashed") +
xlab("Total YOY abundance at year t") +
ylab("Total adult abundance at year t+1") +
labs(title = "Based on analysis of 72 sites in 1996-2010 in Shenandoah") +
theme_bw() +
theme(axis.title.y = element_text(size = rel(1.5), angle=90),
axis.title.x = element_text(size = rel(1.5)),
axis.text = element_text(size = rel(1.2)),
plot.title = element_text(size = rel(1.5), colour="blue"),
panel.border=element_rect(colour='black'),
panel.background=element_rect(fill='white', colour='black'),
panel.grid.major=element_line(colour=NA),
panel.grid.minor=element_line(colour=NA))
str(ParsStage)
str(out2)
?dic.samples
lambda(A1)
library(popbio)
install.packages(popbio)
install.packages("popbio")
library(popbio)
lambda(A1)
sensitivity(A1, zero=TRUE)
elasticity(A1)
sensitivity(A2, zero=TRUE)
A2
sensitivity(A2, zero=TRUE)
elasticity(A2)
?popbio
?lambda
3000/73
library(reshape2)
library(rjags)
library(plyr)
library(ggplot2)
library(knitr)
load.module("glm")
ricker = function(x, a = 1, b = 1) {
+ a * x * exp(-b * x)
}
xvec <- seq(from = 10, to = 50, by = 10)
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
ggplot(aes(xvec, yvals))
yvals
xvec
?ggplot
df <- data.frame(c(xvec, yvals))
df
df <- data.frame(xvec, yvals)
df
ggplot(data = df, aes(xvec, yvals))
ggplot(data = df, aes(xvec, yvals)) + geom_point()
ggplot(data = df, aes(xvec, yvals)) + geom_line()
xvec <- seq(from = 10, to = 200, by = 10)
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, yvals)) + geom_line()
ggplot(data = df, aes(exp(xvec), yvals)) + geom_line()
ggplot(data = df, aes(xvec, yvals)) + geom_line()
ricker = function(x, a = 1, b = 1) {
a * x * exp(-b * x)
}
xvec <- seq(from = 10, to = 200, by = 10)
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, yvals)) + geom_line()
yvals = sapply(xvec, ricker, a = 2, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, yvals)) + geom_line()
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, yvals)) + geom_line()
10^0.0075
100^.0075
10^0
0.0075*10
0.0075*100
ricker = function(x, a = 1, b = 0.0075) {
a * x * exp(-b * x)
}
xvec <- seq(from = 10, to = 200, by = 10)
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, yvals), xlab = "Adult N previous yr", ylab = "") + geom_line()
ricker = function(x, a = 1, b = 0.0075) {
a - b * x)
}
xvec <- seq(from = 10, to = 200, by = 10)
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, yvals), xlab = "Adult N previous yr", ylab = "") + geom_line()
ricker = function(x, a = 1, b = 0.0075) {
a - b * x
}
xvec <- seq(from = 10, to = 200, by = 10)
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, yvals), xlab = "Adult N previous yr", ylab = "") + geom_line()
df <- data.frame(xvec, exp(yvals))
df
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, exp(yvals)), xlab = "Adult N previous yr", ylab = "") + geom_line()
xvec <- seq(from = 1, to = 200, by = 10)
yvals = sapply(xvec, ricker, a = 1, b = 0.0075)
df <- data.frame(xvec, yvals)
ggplot(data = df, aes(xvec, exp(yvals)), xlab = "Adult N previous yr", ylab = "") + geom_line()
df <- data.frame(xvec, lyvals, rpois(n=1, lambda=xvec*exp(lyvals)))
ricker = function(x, a = 1, b = 0.0075) {
a * x * exp(-b * x)
}
lricker = function(x, a = 1, b = 0.0075) {
a - b * x
}
xvec <- seq(from = 1, to = 200, by = 10)
lyvals = sapply(xvec, lricker, a = 1, b = 0.0075)
df <- data.frame(xvec, lyvals, rpois(n=1, lambda=xvec*exp(lyvals)))
ggplot(data = df, aes(xvec, exp(lyvals)), xlab = "Adult N previous yr", ylab = "") + geom_line()
ggplot(data = df, aes(xvec, exp(lyvals)), xlab = "Adult N previous yr", ylab = "") + geom_line()
df
xvec <- seq(from = 1, to = 200, by = 10)
lyvals = sapply(xvec, lricker, a = 1, b = 0.0075)
N2 <- rpois(n=1, lambda=xvec*exp(lyvals))
N2
?apply
?supply
?sapply
N2 <- sapply(lyvals, rpois(n=1, lambda=xvec*exp(x))
)
rpois(n=1, lambda=xvec*exp(x))
lyvals
?apply
xvec*exp(lyvals)
rpois(1, xvec*exp(lyvals))
for(i in 1:length(lyvals) rpois(1, xvec*exp(lyvals))
for(i in 1:length(lyvals)) rpois(1, xvec[i]*exp(lyvals[i]))
N2 <- for(i in 1:length(lyvals)) rpois(1, xvec[i]*exp(lyvals[i]))
N2
rpois(1, xvec[i]*exp(lyvals[i]))
for(i in 1:length(lyvals)) {
N2[i] <- rpois(1, xvec[i]*exp(lyvals[i]))
}
N2
df <- data.frame(xvec, lyvals, N2)
ggplot(data = df, aes(xvec, exp(lyvals)), xlab = "Adult N previous yr", ylab = "") + geom_line()
df
ggplot(data = df, aes(xvec, exp(lyvals)), xlab = "Adult N previous yr", ylab = "YOY produced") + geom_line()
ggplot(data = df, aes(xvec, exp(lyvals)*xvec), xlab = "Adult N previous yr", ylab = "YOY produced") + geom_line()
ggplot(data = df, aes(xvec, exp(lyvals)*xvec, xlab = "Adult N previous yr", ylab = "YOY produced")) + geom_line()
ggplot(data = df, aes(xvec, exp(lyvals)*xvec)) + geom_line(xlab = "Adult N previous yr", ylab = "YOY produced")
ggplot(data = df, aes(xvec, exp(lyvals)*xvec)) + geom_line() + xlab = "Adult N previous yr" + ylab = "YOY produced"
ggplot(data = df, aes(xvec, exp(lyvals)*xvec)) + geom_line(+ xlab = "Adult N previous yr" + ylab = "YOY produced")
ggplot(data = df, aes(xvec, exp(lyvals)*xvec)) + geom_line(xlab = "Adult N previous yr" + ylab = "YOY produced")
ggplot(data = df) + geom_line(aes(xvec, exp(lyvals)*xvec) + xlab = "Adult N previous yr" + ylab = "YOY produced")
ggplot(data = df) + geom_line(aes(xvec, exp(lyvals)*xvec + xlab = "Adult N previous yr" + ylab = "YOY produced")
ggplot(data = df) + geom_line(aes(xvec, exp(lyvals)*xvec) + xlab("Adult N previous yr") + (ylab = "YOY produced") )
ggplot(data = df) + geom_line(aes(xvec, exp(lyvals)*xvec)) + xlab("Adult N previous yr") + (ylab = "YOY produced")
ggplot(data = df) + geom_line(aes(xvec, exp(lyvals)*xvec)) + xlab(x = "Adult N previous yr") + ylab("YOY produced")
ggplot(data = df, aes(xvec, exp(lyvals)*xvec)) + geom_line() + xlab(x = "Adult N previous yr") + ylab(y = "YOY produced")
ggplot(data = df, aes(xvec, exp(lyvals)*xvec)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced")
ggplot(data = df, aes(xvec, exp(lyvals))) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced")
ggplot(data = df, aes(xvec, exp(lyvals))) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
xvec <- seq(from = 0, to = 50, by = 10)
lyvals = sapply(xvec, lricker, a = 1, b = 0.0075)
for(i in 1:length(lyvals)) {
N2[i] <- rpois(1, xvec[i]*exp(lyvals[i]))
}
N2
df <- data.frame(xvec, lyvals, N2)
xvec
lyvals
N2
for(i in 1:length(lyvals)) {
N2[i] <- rpois(1, xvec[i]*exp(lyvals[i]))
}
N2 <- NULL
for(i in 1:length(lyvals)) {
N2[i] <- rpois(1, xvec[i]*exp(lyvals[i]))
}
N2
df <- data.frame(xvec, lyvals, N2)
df
summary(out1)
summary(out2)
plot(out1)
plot(out1)
3000/72
14750/72
9000/72
N.a <- seq(from = 0, to = 50, by = 1)
lyvals = sapply(N.a, lricker, a = 1, b = 0.0075)
N2 <- NULL
for(i in 1:length(lyvals)) {
N2[i] <- rpois(1, N.a[i]*exp(lyvals[i]))
}
N2
df <- data.frame(N.a, lyvals, N2)
df
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced")
ggplot(data = df, aes(N.a, exp(lyvals))) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
# survival
0.3190*N.yoy + 0.4526*N.a + N2
N2
N.a
0.3190*N2 + 0.4526*N.a + N2
S <- 0.3190*N2 + 0.4526*N.a
S
ggplot(data = df, aes(N.a, S + N2)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
N.a
ggplot(data = df, aes(N.a + N2, S + N2)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
ggplot(data = df, aes(N2, S)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
df$S
df$S <- 0.3190*N2 + 0.4526*N.a
df$S
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, S)) + labs(x = "Adult N previous yr", y = "YOY produced")
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + gemo_line(aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, S)) + labs(x = "Adult N previous yr", y = "YOY produced")
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, S)) + labs(x = "Adult N previous yr", y = "YOY produced")
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, S)) + labs(x = "Adult N previous yr", y = "YOY produced") + geom_abline()
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, exp(lyvals)*N.a)) + geom_line(aes(N.a, S)) + labs(x = "Adult N previous yr", y = "YOY produced") + geom_abline(colour = "red")
ggplot(data = df, aes(N.a + N2, exp(lyvals)*N.a)) + geom_line(aes(N.a + N2, exp(lyvals)*N.a)) + geom_line(aes(N.a + N2, S)) + labs(x = "Adult N previous yr", y = "YOY produced") + geom_abline(colour = "red")
ggplot(data = df, aes(N.a + N2, exp(lyvals)*N.a)) + geom_line(aes(N.a + N2, exp(lyvals)*N.a)) + geom_line(aes(N.a + N2, S)) + labs(x = "Adult N previous yr", y = "YOY produced") + geom_abline(colour = "red") + geom_line(aes(N.a + N2, exp(lyvals)*N.a + S))
ggplot(data = df, aes(N.a + N2, exp(lyvals)*N.a)) + geom_line(aes(N.a + N2, exp(lyvals)*N.a), colour = "gray") + geom_line(aes(N.a + N2, S)) + labs(x = "Adult N previous yr", y = "YOY produced") + geom_abline(colour = "red") + geom_line(aes(N.a + N2, exp(lyvals)*N.a + S))
ggplot(data = df, aes(N.a + N2, exp(lyvals)*N.a)) + geom_line(aes(N.a + N2, exp(lyvals)*N.a), colour = "gray") + geom_line(aes(N.a + N2, S), colour = "gray") + labs(x = "Adult N previous yr", y = "YOY produced") + geom_abline(colour = "red") + geom_line(aes(N.a + N2, exp(lyvals)*N.a + S))
N.a <- seq(from = 0, to = 300, by = 1)
lyvals = sapply(N.a, lricker, a = 1, b = 0.0075)
N2 <- NULL
for(i in 1:length(lyvals)) {
N2[i] <- rpois(1, N.a[i]*exp(lyvals[i]))
}
N2
df <- data.frame(N.a, lyvals, N2)
df
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced")
ggplot(data = df, aes(N.a, exp(lyvals))) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
# survival
df$S <- 0.3190*N2 + 0.4526*N.a
ggplot(data = df, aes(N.a + N2, S + N2)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
ggplot(data = df, aes(N2, S)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
ggplot(data = df, aes(N.a + N2, exp(lyvals)*N.a)) + geom_line(aes(N.a + N2, exp(lyvals)*N.a), colour = "gray") + geom_line(aes(N.a + N2, S), colour = "gray") + labs(x = "Adult N previous yr", y = "YOY produced") + geom_abline(colour = "red") + geom_line(aes(N.a + N2, exp(lyvals)*N.a + S))
ggplot(data = df, aes(N.a, exp(lyvals))) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced per capita")
ggplot(data = df, aes(N.a, exp(lyvals)*N.a)) + geom_line() + labs(x = "Adult N previous yr", y = "YOY produced")
?lmer
